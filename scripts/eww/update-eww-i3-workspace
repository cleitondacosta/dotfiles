#!/usr/bin/env bash
#
# This script uses the i3-msg to subscribe to the events of i3wm.
# 
# By doing this, there's no need to check what is the state of i3 workspace
# each N seconds, because it will be updated in real time, as soon as
# the wm notifies it through the socket. This is done in the while loop in the
# code below.
# 
# See more here: https://i3wm.org/docs/ipc.html
# 
# I'm using it to change two eww variables to highlight the focused workspace 
# and non-empty workspaces, so that I can apply different styles to them. For 
# this to work, you need to create those variables in your eww configuration
# (focusedWorkspace and activeWorkspaces). And then this script needs to be 
# running to update those variables, so it needs to be invoked in the i3 
# config file.
# 
# For a better understanding, see: 
#     - my "config/i3" file
#     - my "eww/widgets/I3Workspaces.yuck" file
# 

function get_i3_event_name {
    echo "$1" | grep -Po '"change":".*?"' | cut -f 2 -d ':' |  tr -d '"'
}

function get_i3_workspace_name {
    echo "$1" | grep -Po '"name":".*?"' | head -1 | cut -f 2 -d ':' | tr -d '"'
}

function add_active_workspace {
    workspace_name="$1"

    if [[ ! " ${ACTIVE_WORKSPACES[*]} " =~ " $workspace_name " ]]; then
        ACTIVE_WORKSPACES+=("$workspace_name")
        update_eww_active_workspaces
    fi
}

function remove_active_workspace {
    workspace_name="$1"
    ACTIVE_WORKSPACES=($(echo "${ACTIVE_WORKSPACES[@]}" | sed "s/$1//g"))
    update_eww_active_workspaces
}

function set_initial_values {
    ACTIVE_WORKSPACES=($(i3-msg -t get_workspaces | jq ".[].name" | tr '\n' ' ' | tr -d '"'))
    update_eww_active_workspaces

    #TODO: set eww "focusedWorkspace" initial value
}

function update_eww_active_workspaces {
    ewwActiveWorkspaces="$(echo "[${ACTIVE_WORKSPACES[@]}]" | sed 's/ /,/g')"
    eww update activeWorkspaces="$ewwActiveWorkspaces"
}

function await_eww_startup {
    while true; do
        sleep 1
        [[ "$(eww ping)" = "pong" ]] && break
    done
}

function main {
    await_eww_startup
    set_initial_values

    declare -a ACTIVE_WORKSPACES

    i3-msg -t subscribe -m '[ "workspace" ]' | while read event; do
        eventName="$(get_i3_event_name "$event")"
        workspaceName="$(get_i3_workspace_name "$event")"

        case "$eventName" in
            "focus")
                eww update focusedWorkspace=$workspaceName
                add_active_workspace "$workspaceName"
                ;;
            "init") 
                add_active_workspace "$workspaceName"
                ;; 
            "empty")
                remove_active_workspace "$workspaceName"
                ;;
        esac
    done
}

main
